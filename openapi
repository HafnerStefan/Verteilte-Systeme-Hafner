---
openapi: 3.0.3
info:
  title: verteilte-systeme API
  version: 1.0.0-SNAPSHOT
paths:
  /blog:
    get:
      tags:
      - Blog Resource
      parameters:
      - name: size
        in: query
        schema:
          format: int32
          default: 15
          type: integer
      - name: start
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: userId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: List of blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlogsResponse"
    post:
      tags:
      - Blog Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogRequest"
      responses:
        "201":
          description: Blog created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
  /blog/toUser/{blogId}/{userId}:
    get:
      tags:
      - Blog Resource
      parameters:
      - name: blogId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: User assigned to blog
          content: {}
        "404":
          description: Blog or User not found
  /blog/{blogId}:
    get:
      tags:
      - Blog Resource
      parameters:
      - name: blogId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: commentSize
        in: query
        schema:
          format: int32
          default: 15
          type: integer
      - name: commentStart
        in: query
        schema:
          format: int32
          default: 0
          type: integer
      - name: sortByDateAsc
        in: query
        schema:
          default: true
          type: boolean
      responses:
        "200":
          description: Blog found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogDetailsResponse"
        "404":
          description: Blog not found
    put:
      tags:
      - Blog Resource
      parameters:
      - name: blogId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogRequest"
      responses:
        "200":
          description: Blog updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
        "404":
          description: Blog not found
    delete:
      tags:
      - Blog Resource
      parameters:
      - name: blogId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Blog deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogResponse"
        "404":
          description: Blog not found
  /comment:
    post:
      tags:
      - Comment Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentRequest"
      responses:
        "201":
          description: Comment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
  /comment/byuser/{userId}:
    get:
      tags:
      - Comment Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Comments by User ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentWithBlogTitleResponse"
        "404":
          description: Comments not found
  /comment/context/{commentId}:
    get:
      tags:
      - Comment Resource
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: nextCommentSize
        in: query
        schema:
          format: int32
          default: 4
          type: integer
      - name: previousCommentSize
        in: query
        schema:
          format: int32
          default: 2
          type: integer
      responses:
        "200":
          description: Comment with context by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentWithBlogContextResponse"
        "404":
          description: Comment not found
  /comment/{blogId}:
    get:
      tags:
      - Comment Resource
      parameters:
      - name: blogId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Comments by Blog ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentResponse"
        "404":
          description: Comments not found
  /comment/{commentId}:
    get:
      tags:
      - Comment Resource
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Comment by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "404":
          description: Comment not found
    delete:
      tags:
      - Comment Resource
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: Comment deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommentResponse"
        "404":
          description: Comment not found
  /hello:
    get:
      tags:
      - Greeting Resource
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /users:
    get:
      tags:
      - User Resource
      responses:
        "200":
          description: List of all Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsersResponse"
    post:
      tags:
      - User Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
  /users/{userEmail}:
    get:
      tags:
      - User Resource
      parameters:
      - name: userEmail
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User by Email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          description: User not found
  /users/{userId}:
    get:
      tags:
      - User Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: User by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          description: User not found
    put:
      tags:
      - User Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          description: User not found
    delete:
      tags:
      - User Resource
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          description: User not found
  /users/{userName}:
    get:
      tags:
      - User Resource
      parameters:
      - name: userName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User by Name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "404":
          description: User not found
components:
  schemas:
    BlogDetailsResponse:
      description: DTO for detailed blog view with comments and user details
      required:
      - id
      - title
      - text
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        title:
          type: string
          example: New Blog
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\
            \ laoreet eu purus ac congue. Proin aliquam in enim aliquet viverra."
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        userId:
          format: int64
          type: integer
          example: 1245
        comments:
          description: List of comment details
          type: array
          items:
            $ref: "#/components/schemas/CommentResponse"
        user:
          description: User details
          type: object
          allOf:
          - $ref: "#/components/schemas/UserResponse"
    BlogRequest:
      description: Request payload for creating or updating a blog
      required:
      - title
      - text
      - userId
      type: object
      properties:
        title:
          type: string
          example: New Blog
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\
            \ laoreet eu purus ac congue. Proin aliquam in enim aliquet viverra."
        userId:
          format: int64
          type: integer
          example: 2023-06-15T10:15:30
        commentIds:
          type: array
          items:
            format: int64
            type: integer
          example:
          - 12345
          - 67890
          - 13579
    BlogResponse:
      description: Blog entity
      required:
      - id
      - title
      - text
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        title:
          type: string
          example: New Blog
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\
            \ laoreet eu purus ac congue. Proin aliquam in enim aliquet viverra."
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        userId:
          format: int64
          type: integer
          example: 1245
    BlogsResponse:
      description: DTO for listing blogs with comment IDs
      required:
      - id
      - title
      - text
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        title:
          type: string
          example: New Blog
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus\
            \ laoreet eu purus ac congue. Proin aliquam in enim aliquet viverra."
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        userId:
          format: int64
          type: integer
          example: 1245
        commentsIds:
          description: List of comment IDs
          type: array
          items:
            format: int64
            type: integer
          example:
          - 46516
          - 4584
          - 62
          - 14
          - 2
    CommentRequest:
      description: Request payload for creating comment
      required:
      - text
      type: object
      properties:
        text:
          type: string
          example: Great post!
        userId:
          format: int64
          type: integer
          example: 12345
        blogId:
          format: int64
          type: integer
          example: 67890
    CommentResponse:
      description: Blog entity
      required:
      - id
      - text
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing"
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        blogId:
          format: int64
          type: integer
          example: 1245
        userId:
          format: int64
          type: integer
          example: 1245
    CommentWithBlogContextResponse:
      description: DTO for comments with blog title and context
      required:
      - id
      - text
      - blogTitle
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing"
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        blogId:
          format: int64
          type: integer
          example: 1245
        userId:
          format: int64
          type: integer
          example: 1245
        blogTitle:
          type: string
          example: My Blog Title
        previousComments:
          description: Previous comments
          type: array
          items:
            $ref: "#/components/schemas/CommentResponse"
        nextComments:
          description: Next comments
          type: array
          items:
            $ref: "#/components/schemas/CommentResponse"
    CommentWithBlogTitleResponse:
      description: DTO for comments with blog title
      required:
      - id
      - text
      - blogTitle
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        text:
          type: string
          example: "Lorem ipsum dolor sit amet, consectetur adipiscing"
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        blogId:
          format: int64
          type: integer
          example: 1245
        userId:
          format: int64
          type: integer
          example: 1245
        blogTitle:
          type: string
          example: My Blog Title
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    UserDetailsResponse:
      description: DTO for detailed user view with blogs and comments
      required:
      - id
      - name
      - age
      - email
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        name:
          type: string
          example: Sandra Dubeli
        age:
          format: int32
          type: integer
          example: 32
        email:
          type: string
          example: sandra.dubeli@example.com
        address:
          type: string
          example: "123 Main St, Anytown, AT 12345"
        phone:
          type: string
          example: +41 78 965 26 15
        gender:
          type: string
          example: female
        dateOfBirth:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          example: 1988-12-31
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        blogs:
          description: List of blog details
          type: array
          items:
            $ref: "#/components/schemas/BlogResponse"
        comments:
          description: List of comment details
          type: array
          items:
            $ref: "#/components/schemas/CommentResponse"
    UserRequest:
      description: Request payload for creating or updating a user
      required:
      - name
      - age
      - email
      type: object
      properties:
        name:
          type: string
          example: Sandra Dubeli
        age:
          format: int32
          type: integer
          example: 32
        email:
          type: string
          example: sandra.dubeli@example.com
        password:
          minLength: 8
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
          type: string
          example: Password1234
          writeOnly: true
        address:
          type: string
          example: "123 Main St, Anytown, AT 12345"
        phone:
          type: string
          example: +41 78 965 26 15
        gender:
          type: string
          example: female
        dateOfBirth:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          example: 1988-12-31
    UserResponse:
      description: Base DTO for user
      required:
      - id
      - name
      - age
      - email
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        name:
          type: string
          example: Sandra Dubeli
        age:
          format: int32
          type: integer
          example: 32
        email:
          type: string
          example: sandra.dubeli@example.com
        address:
          type: string
          example: "123 Main St, Anytown, AT 12345"
        phone:
          type: string
          example: +41 78 965 26 15
        gender:
          type: string
          example: female
        dateOfBirth:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          example: 1988-12-31
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
    UsersResponse:
      description: DTO for listing users with blog and comment IDs
      required:
      - id
      - name
      - age
      - email
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 32126319
        name:
          type: string
          example: Sandra Dubeli
        age:
          format: int32
          type: integer
          example: 32
        email:
          type: string
          example: sandra.dubeli@example.com
        address:
          type: string
          example: "123 Main St, Anytown, AT 12345"
        phone:
          type: string
          example: +41 78 965 26 15
        gender:
          type: string
          example: female
        dateOfBirth:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
          example: 1988-12-31
        createdAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        updatedAt:
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
          example: 2023-01-02T12:00:00
        blogIds:
          type: array
          items:
            format: int64
            type: integer
          example:
          - 12345
          - 67890
          - 13579
        commentIds:
          type: array
          items:
            format: int64
            type: integer
          example:
          - 98765
          - 43210
          - 24680
